# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env: 
    resourceGroupName: GitHubExampleRG
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: Azure/login@v1.4.6
        with:
           # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
           creds: ${{ secrets.AZURE_CREDENTIALS }}
           # ClientId of the Azure Service principal created.
           enable-AzPSSession: true
      - name: build the bicep file
        uses: Azure/cli@v1.0.7
        with:
           # Specify the script here
           inlineScript: az bicep build --file /sources/single/ --outfile /sources/single/main.json
           # Azure CLI version to be used to execute the script. If not provided, latest version is used
         
      - name: Create the resourcegroup
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript: New-Azresourcegroup -Name ${{ env.resourceGroupName }} -Location WestEurope -Force
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: latest
      - name: Perform whatif
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript: New-AZresourcegroupdeployment -Resourcegroupname  ${{ env.resourceGroupName }} -TemplateFile /sources/single/main.bicep -WhatIf    # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: latest
          # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
         
       
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1.0.9
        with:
            # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
            scope: resourcegroup
            # Provide the name of a resource group, only required for resource Group deployments.
            resourceGroupName: ${{ env.resourceGroupName }}
            # Specify the path or URL to the Azure Resource Manager template.
            template: /sources/single/main.json
            # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
            parameters: storageAccountPrefix=ghaction
            deploymentName: "gh${{github.run_id}}"
  
